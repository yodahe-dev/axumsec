'use client';

import { useEffect, useState } from 'react';
import axios from 'axios';
import { motion } from 'framer-motion';
import * as LucideIcons from 'lucide-react';
import { ShieldCheck } from 'lucide-react';
import { Button } from '@/components/ui/button';

const API_URL = `${process.env.NEXT_PUBLIC_API_URL}/api/api-pentest-page?populate[Button][populate]=*`;

type ButtonType = {
  id: number;
  label: string;
  url: string;
  icon: keyof typeof LucideIcons;
};

export default function CTA() {
  const [ctaTitle, setCtaTitle] = useState('');
  const [ctaSubtitle, setCtaSubtitle] = useState('');
  const [buttons, setButtons] = useState<ButtonType[]>([]);

  useEffect(() => {
    axios
      .get(API_URL)
      .then((res) => {
        const data = res.data?.data;
        setCtaTitle(data?.ctaTitles || '');
        setCtaSubtitle(data?.ctaSubtitles || '');
        setButtons(data?.Button || []);
      })
      .catch(() => {
        setCtaTitle('Secure Your API Gateways');
        setCtaSubtitle("Don't leave your APIs vulnerable to attacks.");
        setButtons([
          {
            id: 1,
            label: 'Secure Your APIs',
            url: '/',
            icon: 'ArrowRight',
          },
        ]);
      });
  }, []);

  return (
    <section className="py-20 px-4 text-center">
      <div className="max-w-3xl mx-auto">
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          whileInView={{ opacity: 1, scale: 1 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="bg-gradient-to-r from-red-50 to-red-100 dark:from-red-900/30 dark:to-red-900/10 rounded-3xl p-12"
        >
          <div className="bg-red-100 dark:bg-red-900/20 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-8">
            <ShieldCheck className="w-10 h-10 text-red-600" />
          </div>

          <h2 className="text-3xl md:text-4xl font-bold mb-6 text-gray-900 dark:text-white">{ctaTitle}</h2>
          <p className="text-xl text-gray-700 dark:text-gray-300 mb-10 max-w-2xl mx-auto">
            {ctaSubtitle}
          </p>

          <div className="flex flex-wrap justify-center gap-4">
            {buttons.map((btn) => {
              const IconComponent = LucideIcons[btn.icon] || LucideIcons.ArrowRight;
              return (
                <motion.div
                  key={btn.id}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <a href={btn.url}>
                    <Button className="bg-gradient-to-r from-red-600 to-red-800 hover:from-red-700 hover:to-red-900 text-white py-6 px-8 text-lg font-bold shadow-lg flex items-center gap-2">
                      {btn.label}
                      <IconComponent className="h-5 w-5" />
                    </Button>
                  </a>
                </motion.div>
              );
            })}
          </div>
        </motion.div>
      </div>
    </section>
  );
}
