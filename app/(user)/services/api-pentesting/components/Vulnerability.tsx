'use client';

import { useEffect, useState } from 'react';
import axios from 'axios';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';

type Vulnerability = {
  id: number;
  title: string;
  subtitle: string;
  riskLevel: string;
};

export default function Vulnerability() {
  const [vulnerabilities, setVulnerabilities] = useState<Vulnerability[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchVulnerabilities = async () => {
      try {
        const res = await axios.get(
          'http://localhost:1337/api/api-pentest-page?populate[Vulnerabilities][populate]=*'
        );
        const data = res.data.data;

        if (data.Vulnerabilities && Array.isArray(data.Vulnerabilities)) {
          setVulnerabilities(data.Vulnerabilities);
        } else {
          setVulnerabilities([]);
        }
      } catch (err) {
        setError('Failed to load vulnerabilities.');
      } finally {
        setLoading(false);
      }
    };

    fetchVulnerabilities();
  }, []);

  if (loading) {
    return (
      <section className="py-16 text-center text-gray-600 dark:text-gray-300">
        Loading vulnerabilities...
      </section>
    );
  }

  if (error) {
    return (
      <section className="py-16 text-center text-red-600">
        {error}
      </section>
    );
  }

  if (vulnerabilities.length === 0) {
    return (
      <section className="py-16 text-center text-gray-600 dark:text-gray-300">
        No vulnerability data available.
      </section>
    );
  }

  return (
    <section className="py-16 bg-gray-50 dark:bg-gray-800/30">
      <div className="max-w-6xl mx-auto px-4">
        <div className="text-center mb-16">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-3xl font-bold mb-4 text-gray-900 dark:text-white"
          >
            Common API Vulnerabilities
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.1 }}
            className="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto"
          >
            We identify and help remediate critical API security flaws
          </motion.p>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {vulnerabilities.map((vuln) => (
            <motion.div
              key={vuln.id}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.3 }}
            >
              <Card className="border border-gray-200 dark:border-gray-800 hover:border-red-500 dark:hover:border-red-600 transition-colors">
                <CardHeader className="pb-3">
                  <div className="flex justify-between items-start">
                    <CardTitle className="text-lg">{vuln.title}</CardTitle>
                    <Badge variant="outline" className="text-gray-700 border-gray-700 dark:text-gray-300 dark:border-gray-300">
                      {vuln.riskLevel}
                    </Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 dark:text-gray-400">{vuln.subtitle}</p>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}
