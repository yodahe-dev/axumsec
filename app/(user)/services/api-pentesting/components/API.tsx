'use client';

import { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import * as Icons from 'lucide-react';

type APIItem = {
  id: number;
  icon: keyof typeof Icons;
  title: string;
  description: string;
};

export default function API() {
  const [apiList, setApiList] = useState<APIItem[]>([]);
  const [title, setTitle] = useState('');
  const [subtitle, setSubtitle] = useState('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchAPIList = async () => {
      try {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/api-pentest-page?populate[Apilist][populate]=*`);
        const json = await res.json();
        const data = json.data;

        setTitle(data.apiTypesTitle || '');
        setSubtitle(data.apiTypesSubtitle || '');
        setApiList(data.Apilist || []);
      } catch (err) {
        setError('Failed to load API types');
      } finally {
        setLoading(false);
      }
    };

    fetchAPIList();
  }, []);

  if (loading) {
    return (
      <section className="py-16 text-center text-gray-600 dark:text-gray-300">
        Loading API types...
      </section>
    );
  }

  if (error || !apiList.length) {
    return (
      <section className="py-16 text-center text-red-600">
        {error || 'No API type data found'}
      </section>
    );
  }

  return (
    <section className="py-16 bg-gray-50 dark:bg-gray-800/30">
      <div className="max-w-6xl mx-auto px-4">
        <div className="text-center mb-16">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-3xl font-bold mb-4 text-gray-900 dark:text-white"
          >
            {title}
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.1 }}
            className="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto"
          >
            {subtitle}
          </motion.p>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {apiList.map((api, index) => {
            const LucideIcon = Icons[api.icon] || Icons.Circle;

            return (
              <motion.div
                key={api.id}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.3, delay: index * 0.1 }}
              >
                <Card className="h-full border border-gray-200 dark:border-gray-800 hover:border-red-500 dark:hover:border-red-600 transition-colors">
                  <CardHeader>
                    <div className="bg-red-100 dark:bg-red-900/30 w-12 h-12 rounded-lg flex items-center justify-center mx-auto mb-4">
                      <LucideIcon className="w-6 h-6" />
                    </div>
                    <CardTitle className="text-center">{api.title}</CardTitle>
                  </CardHeader>
                  <CardContent className="text-center">
                    <p className="text-gray-600 dark:text-gray-400">{api.description}</p>
                  </CardContent>
                </Card>
              </motion.div>
            );
          })}
        </div>
      </div>
    </section>
  );
}
