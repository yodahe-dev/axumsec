'use client';

import { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { ShieldCheck, ArrowRight } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';

type HeroData = {
  heroBadge: string;
  heroTitle: string;
  heroSubtitle: { children: { text: string }[] }[];
  heroCtaText: string;
  heroCtaLink: string;
  heroSecondaryButton: string;
  heroSecondaryButtonLink: string;
};

export default function Hero() {
  const [data, setData] = useState<HeroData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/api-pentest-page`);
        const json = await res.json();
        setData(json.data);
      } catch (err) {
        setError('Failed to load hero section');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) {
    return (
      <section className="py-20 text-center text-gray-600 dark:text-gray-300">
        Loading hero section...
      </section>
    );
  }

  if (error || !data) {
    return (
      <section className="py-20 text-center text-red-600">
        {error || 'No data found'}
      </section>
    );
  }

  const {
    heroBadge,
    heroTitle,
    heroSubtitle,
    heroCtaText,
    heroCtaLink,
    heroSecondaryButton,
    heroSecondaryButtonLink,
  } = data;

  const subtitleText = heroSubtitle?.[0]?.children?.[0]?.text || '';

  return (
    <section className="relative py-20 px-4 overflow-hidden">
      <div className="absolute inset-0 z-0">
        <div className="absolute top-20 left-10 w-64 h-64 bg-red-500 rounded-full mix-blend-multiply filter blur-3xl opacity-20 dark:opacity-15 animate-blob"></div>
        <div className="absolute top-40 right-10 w-72 h-72 bg-purple-500 rounded-full mix-blend-multiply filter blur-3xl opacity-20 dark:opacity-15 animate-blob animation-delay-2000"></div>
        <div className="absolute bottom-20 left-1/2 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-3xl opacity-20 dark:opacity-15 animate-blob animation-delay-4000"></div>
      </div>

      <div className="relative z-10 max-w-6xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="text-center"
        >
          <Badge
            variant="outline"
            className="mb-4 py-1.5 px-4 bg-red-50 dark:bg-red-900/20 border-red-300 dark:border-red-700"
          >
            <ShieldCheck className="w-4 h-4 mr-2 text-red-600" />
            <span className="text-red-600 font-medium">{heroBadge}</span>
          </Badge>

          <h1 className="text-4xl md:text-6xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-red-600 to-red-800 dark:from-red-400 dark:to-red-600">
            {heroTitle}
          </h1>

          <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto mb-10">
            {subtitleText}
          </p>

          <motion.div
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            className="flex flex-col sm:flex-row justify-center gap-4"
          >
            <Button
              asChild
              className="bg-gradient-to-r from-red-600 to-red-800 hover:from-red-700 hover:to-red-900 text-white py-6 px-8 text-lg font-bold transition-all"
            >
              <a href={heroCtaLink}>
                {heroCtaText}
                <ArrowRight className="ml-3 h-5 w-5" />
              </a>
            </Button>
            <Button
              asChild
              variant="outline"
              className="py-6 px-8 text-lg border-gray-800 text-gray-800 hover:bg-gray-50 dark:border-gray-300 dark:text-gray-300 dark:hover:bg-gray-800 transition-all"
            >
              <a href={heroSecondaryButtonLink}>{heroSecondaryButton}</a>
            </Button>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
}
